"Previous Section"_Section_start.html - "SPPARKS WWW Site"_sws -
"SPPARKS Documentation"_sd - "SPPARKS Commands"_sc - "Next
Section"_Section_howto.html :c

:link(sws,http://spparks.sandia.gov)
:link(sd,Manual.html)
:link(sc,Section_commands.html#comm)

:line

3. Commands :h3

This section describes how a SPPARKS input script is formatted and
what commands are used to define a simulation.

3.1 "SPPARKS input script"_#cmd_1
3.2 "Parsing rules"_#cmd_2
3.3 "Input script structure"_#cmd_3
3.4 "Commands listed by category"_#cmd_4
3.5 "Commands listed alphabetically"_#cmd_5 :all(b)

:line

3.1 SPPARKS input script :link(cmd_1),h4

SPPARKS executes by reading commands from a input script (text file),
one line at a time.  When the input script ends, SPPARKS exits.  Each
command causes SPPARKS to take some action.  It may set an internal
variable, read in a file, or run a simulation.  Most commands have
default settings, which means you only need to use the command if you
wish to change the default.

In many cases, the ordering of commands in an input script is not
important.  However the following rules apply:

(1) SPPARKS does not read your entire input script and then perform a
simulation with all the settings.  Rather, the input script is read
one line at a time and each command takes effect when it is read.
Thus this sequence of commands:

count	 ligand 10000 
run      100 
run      100 :pre

does something different than this sequence:

run      100 
count	 ligand 10000 
run      100 :pre

In the first case, the count of ligand molecules is set to 10000
before the first simulation and whatever the count becomes will be
used as input for the second simulation.  In the 2nd case, the default
count of 0 is used for the 1st simulation and then the count is set to
10000 molecules before the second simulation.

(2) Some commands are only valid when they follow other commands.  For
example you cannot set the count of a molecular species until the
add_species command has been used to define that species.

(3) Sometimes command B will use values that can be set by command A.
This means command A must precede command B in the input script if it
is to have the desired effect.

(4) Some commands are only used by a specific application(s).

Many input script errors are detected by SPPARKS and an ERROR or
WARNING message is printed.  "This section"_Section_errors.html gives
more information on what errors mean.  The documentation for each
command lists restrictions on how the command can be used.

:line

3.2 Parsing rules :link(cmd_2),h4

Each non-blank line in the input script is treated as a command.
SPPARKS commands are case sensitive.  Command names are lower-case, as
are specified command arguments.  Upper case letters may be used in
file names or user-chosen ID strings.

Here is how each line in the input script is parsed by SPPARKS:

(1) If the line ends with a "&" character (with no trailing
whitespace), the command is assumed to continue on the next line.  The
next line is concatenated to the previous line by removing the "&"
character and newline.  This allows long commands to be continued
across two or more lines.

(2) All characters from the first "#" character onward are treated as
comment and discarded.

(3) The line is searched repeatedly for $ characters which indicate
variables that are replaced with a text string.  If the $ is followed
by curly brackets, then the variable name is the text inside the curly
brackets.  If no curly brackets follow the $, then the variable name
is the character immediately following the $.  Thus $\{myTemp\} and $x
refer to variable names "myTemp" and "x".  See the
"variable"_variable.html command for details of how strings are
assigned to variables and how they are substituted for in input
scripts.

(4) The line is broken into "words" separated by whitespace (tabs,
spaces).  Note that words can thus contain letters, digits,
underscores, or punctuation characters.

(5) The first word is the command name.  All successive words in the
line are arguments.

(6) Text with spaces can be enclosed in double quotes so it will be
treated as a single argument.  See the "dump modify"_dump_modify.html
or "fix print"_fix_print.html commands for examples.  A '#' or '$'
character that in text between double quotes will not be treated as a
comment or substituted for as a variable.

:line

3.3 Input script structure :h4,link(cmd_3)

This section describes the structure of a typical SPPARKS input
script.  The "examples" directory in the SPPARKS distribution contains
sample input scripts; the corresponding problems are discussed in
"this section"_Section_example.html, and some are animated on the
"SPPARKS WWW Site"_sws.

A SPPARKS input script typically has 3 parts:

choice of application, solver, sweeper
settings
run a simulation :ul

The last 2 parts can be repeated as many times as desired.  I.e. run a
simulation, change some settings, run some more, etc.  Each of the 3
parts is now described in more detail.  Remember that almost all the
commands need only be used if a non-default value is desired.

(1) Choice of application, solver, sweep method

Use the "app_style"_app_style.html, "solve_style"_solve_style.html,
and "sweep"_sweep.html commands to setup the kind of simulation you
wish to run.  Note that sweeping is only relevant to applications that
define a geometric lattice of event sites and only if you wish to
perform rejection kinetic Monte Carlo updates.

(2) Settings

Parameters for a simulation can be defined by application-specific
commands or by generic commands that are common to many kinds of
applications.  See the doc pages for individual applications for
information on the former.  Examples of the latter are the
"stats"_stats.html and "temperature"_temperature.html commands.

The "diag_style"_diag_style.html command can also be used to
setup various diagnostic computations to perform during a simulation.

(3) Run a simulation

A kinetic or Metropolis Monte Carlo simulation is performed using the
"run"_run.html command.

:line

3.4 Commands listed by category :link(cmd_4),h4

This section lists all SPPARKS commands, grouped by category.  The
"next section"_#cmd_5 lists the same commands alphabetically.  Note that
some commands are only usable with certain applications.  Also, some
style options for some commands are part of specific SPPARKS packages,
which means they cannot be used unless the package was included when
SPPARKS was built.  Not all packages are included in a default SPPARKS
build.  These dependencies are listed as Restrictions in the command's
documentation.

Initialization commands:

"app_style"_app_style.html,
"create_box"_create_box.html,
"create_sites"_create_sites.html,
"processors"_processors.html,
"read_sites"_read_sites.html,
"region"_region.html,
"solve_style"_solve_style.html

Setting commands:

"dimension"_dimension.html,
"boundary"_boundary.html,
"lattice"_lattice.html,
"pair_coeff"_pair_coeff.html,
"pair_style"_pair_style.html,
"reset_time"_reset_time.html,
"sector"_sector.html,
"seed"_seed.html,
"sweep"_sweep.html,
"set"_set.html

Application-specific commands:

"add_reaction"_add_reaction.html,
"add_species"_add_species.html,
"barrier"_barrier.html,
"count"_count.html,
"deposition"_deposition.html,
"ecoord"_ecoord.html,
"inclusion"_inclusion.html,
"pin"_pin.html,
"temperature"_temperature.html,
"volume"_volume.html

Output commands:

"diag_style"_diag_style.html,
"dump"_dump.html,
"dump image"_dump_image.html,
"dump_modify"_dump_modify.html,
"dump_one"_dump_one.html,
"stats"_stats.html,
"undump"_undump.html

Actions:

"run"_run.html,

Miscellaneous:

"clear"_clear.html,
"echo"_echo.html,
"if"_if.html,
"include"_include.html,
"jump"_jump.html,
"label"_label.html,
"log"_log.html,
"next"_next.html,
"print"_print.html,
"shell"_shell.html,
"variable"_variable.html

:line

3.5 Individual commands :h4,link(cmd_5),link(comm)

This section lists all SPPARKS commands alphabetically, with a
separate listing below of styles within certain commands.  The
"previous section"_#cmd_4 lists the same commands, grouped by
category.  Note that commands which are only usable with certain
applications are listed in the next section.

"app_style"_app_style.html,
"boundary"_boundary.html,
"clear"_clear.html,
"create_box"_create_box.html,
"create_sites"_create_sites.html,
"diag_style"_diag_style.html,
"dimension"_dimension.html,
"dump"_dump.html,
"dump image"_dump_image.html,
"dump_modify"_dump_modify.html,
"dump_one"_dump_one.html,
"echo"_echo.html,
"if"_if.html,
"include"_include.html,
"jump"_jump.html,
"label"_label.html,
"lattice"_lattice.html,
"log"_log.html,
"next"_next.html,
"pair_coeff"_pair_coeff.html,
"pair_style"_pair_style.html,
"print"_print.html,
"processors"_processors.html,
"read_sites"_read_sites.html,
"region"_region.html,
"reset_time"_reset_time.html,
"run"_run.html,
"sector"_sector.html,
"seed"_seed.html,
"set"_set.html,
"shell"_shell.html,
"solve_style"_solve_style.html,
"stats"_stats.html,
"sweep"_sweep.html,
"undump"_undump.html,
"variable"_variable.html,
:tb(c=6,ea=c)

:line

Application-specific commands.  These are commands defined only for
use by one or more applications.  See the command doc page for
details.  See the various "app_style"_app_style.html commands in the
next section for a listing of all the commands defined for individual
applications.

"add_reaction"_add_reaction.html,
"add_species"_add_species.html,
"am_build"_am_build.html,
"am cartesian_layer"_am_cartesian_layer.html,
"am pass"_am_pass.html,
"am path"_am_path.html,
"am path_layer"_am_path_layer.html,
"am pathgen"_am_pathgen.html,
"barrier"_barrier.html,
"count"_count.html,
"deep_length"_deep_length.html,
"deep_width"_deep_width.html,
"deposition"_deposition.html,
"diffusion/multiphase"_diffusion_multiphase.html,
"ecoord"_ecoord.html,
"elliopsoid_depth"_ellipsoid_depth.html,
"event"_event.html,
"inclusion"_inclusion.html,
"pin"_pin.html,
"pulse"_pulse.html,
"temperature"_temperature.html,
"volume"_volume.html,
"weld_shape_ellipse"_weld_shape_ellipse.html,
"weld_shape_teardrop"_weld_shape_teardrop.html
:tb(c=6,ea=c)

:line

Application styles.  See the "app_style"_app_style.html command for
one-line descriptions of each style or click on the style itself for a
full description:

"chemistry"_app_chemistry.html,
"diffusion"_app_diffusion.html,
"diffusion/multiphase"_app_diffusion_multiphase.html,
"erbium"_app_erbium.html,
"ising"_app_ising.html,
"ising/single"_app_ising.html,
"membrane"_app_membrane.html,
"potts"_app_potts.html,
"potts/additive"_app_potts_additive.html,
"potts/am/path/gen"_app_potts_am_path_gen.html,
"potts/am/weld"_app_potts_am_weld.html,
"potts/grad"_app_potts_grad.html,
"potts/neigh"_app_potts.html,
"potts/neighonly"_app_potts.html,
"potts/pfm"_app_potts_pfm.html,
"potts/pin"_app_potts_pin.html,
"potts/strain"_app_potts_strain.html,
"potts/strain/pin"_app_potts_strain_pin.html,
"potts/weld"_app_potts_weld.html,
"potts/weld/jom"_app_potts_weld_jom.html,
"relax"_app_relax.html,
"sinter"_app_sinter.html,
"sos"_app_sos.html,
"test/group"_app_test_group.html
:tb(c=8,ea=c)

:line

Solve styles.  See the "solve_style"_solve_style.html command for
one-line descriptions of each style or click on the style itself for a
full description:

"group"_solve_group.html,
"linear"_solve_linear.html,
"tree"_solve_tree.html
:tb(c=6,ea=c)

:line

Pair styles.  See the "pair_style"_solve_style.html command for
one-line descriptions of each style or click on the style itself for a
full description:

"lj/cut"_pair_lj.html :tb(c=6,ea=c)

:line

Diagnostic styles.  See the "diag_style"_diag_style.html command for
one-line descriptions of each style or click on the style itself for a
full description:

"array"_diag_array.html,
"cluster"_diag_cluster.html,
"diffusion"_diag_diffusion.html,
"energy"_diag_energy.html,
"erbium"_diag_erbium.html,
"propensity"_diag_propensity.html,
"sinter_avg_neck_area"_diag_sinter_avg_neck_area.html,
"sinter_density"_diag_sinter_density.html,
"sinter_free_energy_pore"_diag_sinter_free_energy_pore.html,
"sinter_pore_curvature"_diag_sinter_pore_curvature.html
:tb(c=6,ea=c)
