# chama - Intel SandyBridge, mpic++, openmpi, no FFTW

# need to load the following modules:
# 1) intel/12.1
# 2) openmpi-intel/1.8

SHELL = /bin/sh

# ---------------------------------------------------------------------
# compiler/linker settings
# specify flags and libraries needed for your compiler

CC =		mpic++
CCFLAGS =	-O3 -axAVX -funroll-loops -fstrict-aliasing -openmp -std=c++17
SHFLAGS =	-fPIC
DEPFLAGS =	-M

LINK =		mpic++
LINKFLAGS =	-O3 -axAVX -openmp
LIB =	  	-lstdc++ -lm
SIZE =		size

ARCHIVE =	ar
ARFLAGS =	-rc
SHLIBFLAGS =	-shared

# ---------------------------------------------------------------------
# SPPARKS-specific settings
# specify settings for SPPARKS features you will use

# SPPARKS ifdef options, see doc/Section_start.html

SPK_INC =	-DSPPARKS_GZIP -DSPPARKS_BIGBIG

# MPI library, can be src/STUBS dummy lib
# INC = path for mpi.h, MPI compiler settings
# PATH = path for MPI library
# LIB = name of MPI library

MPI_INC =       
MPI_PATH = 
MPI_LIB =	

# JPEG library, only needed if -DSPPARKS_JPEG listed with SPK_INC
# INC = path for jpeglib.h
# PATH = path for JPEG library
# LIB = name of JPEG library

JPG_INC =       
JPG_PATH = 	
JPG_LIB =	#/usr/local/lib/libjpeg.a

# ---------------------------------------------------------------------
# build rules and dependencies
# no need to edit this section

EXTRA_INC = $(SPK_INC) $(MPI_INC) $(JPG_INC)
EXTRA_PATH = $(MPI_PATH) $(JPG_PATH)
EXTRA_LIB = $(MPI_LIB) $(JPG_LIB)

# Path to src files

vpath %.cpp ..
vpath %.h ..

# Link target

$(EXE):	$(OBJ)
	$(LINK) $(LINKFLAGS) $(EXTRA_PATH) $(OBJ) $(EXTRA_LIB) $(LIB) -o $(EXE)
	$(SIZE) $(EXE)

# Library targets

lib:	$(OBJ)
	$(ARCHIVE) $(ARFLAGS) $(EXE) $(OBJ)

shlib:	$(OBJ)
	$(CC) $(CCFLAGS) $(SHFLAGS) $(SHLIBFLAGS) $(EXTRA_PATH) -o $(EXE) \
        $(OBJ) $(EXTRA_LIB) $(LIB)

# Compilation rules

%.o:%.cpp
	$(CC) $(CCFLAGS) $(SHFLAGS) $(EXTRA_INC) -c $<

%.d:%.cpp
	$(CC) $(CCFLAGS) $(EXTRA_INC) $(DEPFLAGS) $< > $@

# Individual dependencies

DEPENDS = $(OBJ:.o=.d)
include $(DEPENDS)
